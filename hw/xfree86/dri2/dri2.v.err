/home/haplessidiot/Documents/xserver/hw/xfree86/dri2/dri2.c:39:10: fatal error: 'dix/dix_priv.h' file not found
   39 | #include "dix/dix_priv.h"
      |          ^~~~~~~~~~~~~~~~
PLEASE submit a bug report to https://github.com/llvm/llvm-project/issues/ and include the crash backtrace, preprocessed source, and associated run script.
Stack dump:
0.	Program arguments: clang -I. -w -Xclang -ast-dump=json -fsyntax-only -fno-diagnostics-color -c /home/haplessidiot/Documents/xserver/hw/xfree86/dri2/dri2.c
1.	<eof> parser at end of file
 #0 0x00007f54f0eea01d llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /usr/src/debug/llvm/llvm-20.1.8.src/lib/Support/Unix/Signals.inc:799:22
 #1 0x00007f54f0ee7b77 llvm::sys::RunSignalHandlers() /usr/src/debug/llvm/llvm-20.1.8.src/lib/Support/Signals.cpp:105:20
 #2 0x00007f54f0ee7b77 llvm::sys::CleanupOnSignal(unsigned long) /usr/src/debug/llvm/llvm-20.1.8.src/lib/Support/Unix/Signals.inc:369:31
 #3 0x00007f54f0dcbb29 HandleCrash /usr/src/debug/llvm/llvm-20.1.8.src/lib/Support/CrashRecoveryContext.cpp:73:5
 #4 0x00007f54f0dcbb29 CrashRecoverySignalHandler /usr/src/debug/llvm/llvm-20.1.8.src/lib/Support/CrashRecoveryContext.cpp:390:62
 #5 0x00007f54efe3e540 (/usr/lib/libc.so.6+0x3e540)
 #6 0x00007f54fa82d4f0 clang::DeclarationName::getStoredNameKind() const /usr/src/debug/clang/clang-20.1.8.src/include/clang/AST/DeclarationName.h:266:40
 #7 0x00007f54fa82d4f0 clang::DeclarationName::isIdentifier() const /usr/src/debug/clang/clang-20.1.8.src/include/clang/AST/DeclarationName.h:385:55
 #8 0x00007f54fa82d4f0 clang::DeclarationName::getAsIdentifierInfo() const /usr/src/debug/clang/clang-20.1.8.src/include/clang/AST/DeclarationName.h:421:21
 #9 0x00007f54fa82d4f0 clang::NamedDecl::getIdentifier() const /usr/src/debug/clang/clang-20.1.8.src/include/clang/AST/Decl.h:274:74
#10 0x00007f54fa82d4f0 clang::comments::Sema::resolveParmVarReference(llvm::StringRef, llvm::ArrayRef<clang::ParmVarDecl const*>) /usr/src/debug/clang/clang-20.1.8.src/lib/AST/CommentSema.cpp:969:59
#11 0x00007f54fa82d6cf clang::comments::Sema::resolveParamCommandIndexes(clang::comments::FullComment const*) /usr/src/debug/clang/clang-20.1.8.src/lib/AST/CommentSema.cpp:729:5
#12 0x00007f54fa82e96d std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>::_Alloc_hider::_Alloc_hider(char*, std::allocator<char>&&) /usr/include/c++/15.1.1/bits/basic_string.h:209:36
#13 0x00007f54fa82e96d std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>::basic_string() /usr/include/c++/15.1.1/bits/basic_string.h:590:9
#14 0x00007f54fa82e96d clang::DiagnosticBuilder::DiagnosticBuilder(clang::DiagnosticsEngine*, clang::SourceLocation, unsigned int) /usr/src/debug/clang/clang-20.1.8.src/lib/Basic/Diagnostic.cpp:685:54
#15 0x00007f54fa82e96d clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int) /usr/src/debug/clang/clang-20.1.8.src/include/clang/Basic/Diagnostic.h:1499:45
#16 0x00007f54fa82e96d clang::comments::Sema::Diag(clang::SourceLocation, unsigned int) /usr/src/debug/clang/clang-20.1.8.src/include/clang/AST/CommentSema.h:64:36
#17 0x00007f54fa82e96d clang::comments::Sema::actOnFullComment(llvm::ArrayRef<clang::comments::BlockContentComment*>) /usr/src/debug/clang/clang-20.1.8.src/lib/AST/CommentSema.cpp:527:9
#18 0x00007f54facf8a29 llvm::SmallVectorTemplateCommon<clang::comments::BlockContentComment*, void>::isSmall() const /usr/include/llvm/ADT/SmallVector.h:143:39
#19 0x00007f54facf8a29 llvm::SmallVectorImpl<clang::comments::BlockContentComment*>::~SmallVectorImpl() /usr/include/llvm/ADT/SmallVector.h:603:23
#20 0x00007f54facf8a29 llvm::SmallVector<clang::comments::BlockContentComment*, 8u>::~SmallVector() /usr/include/llvm/ADT/SmallVector.h:1203:3
#21 0x00007f54facf8a29 clang::comments::Parser::parseFullComment() /usr/src/debug/clang/clang-20.1.8.src/lib/AST/CommentParser.cpp:932:1
#22 0x00007f54facf8a29 clang::RawComment::parse(clang::ASTContext const&, clang::Preprocessor const*, clang::Decl const*) const /usr/src/debug/clang/clang-20.1.8.src/lib/AST/RawCommentList.cpp:221:28
#23 0x00007f54fa6d1bb7 clang::ASTNodeTraverser<clang::JSONDumper, clang::JSONNodeDumper>::Visit(clang::Decl const*, bool)::'lambda'()::operator()() const /usr/src/debug/clang/clang-20.1.8.src/include/clang/AST/ASTNodeTraverser.h:118:7
#24 0x00007f54fa6d1bb7 void clang::NodeStreamer::AddChild<clang::ASTNodeTraverser<clang::JSONDumper, clang::JSONNodeDumper>::Visit(clang::Decl const*, bool)::'lambda'()>(llvm::StringRef, clang::ASTNodeTraverser<clang::JSONDumper, clang::JSONNodeDumper>::Visit(clang::Decl const*, bool)::'lambda'())::'lambda'(bool)::operator()(bool) const /usr/src/debug/clang/clang-20.1.8.src/include/clang/AST/JSONNodeDumper.h:82:17
#25 0x00007f54fa6d1bb7 clang::ASTNodeTraverser<clang::JSONDumper, clang::JSONNodeDumper>::Visit(clang::Decl const*, bool)::'lambda'() std::__invoke_impl<void, void clang::NodeStreamer::AddChild<clang::ASTNodeTraverser<clang::JSONDumper, clang::JSONNodeDumper>::Visit(clang::Decl const*, bool)::'lambda'()>(llvm::StringRef, clang::ASTNodeTraverser<clang::JSONDumper, clang::JSONNodeDumper>::Visit(clang::Decl const*, bool)::'lambda'())::'lambda'(bool)&, bool>(std::__invoke_other, void clang::NodeStreamer::AddChild<clang::ASTNodeTraverser<clang::JSONDumper, clang::JSONNodeDumper>::Visit(clang::Decl const*, bool)::'lambda'()>(llvm::StringRef, clang::ASTNodeTraverser<clang::JSONDumper, clang::JSONNodeDumper>::Visit(clang::Decl const*, bool)::'lambda'())::'lambda'(bool)&, bool&&) /usr/include/c++/15.1.1/bits/invoke.h:63:36
#26 0x00007f54fa6d1bb7 std::enable_if<is_invocable_r_v<clang::ASTNodeTraverser<clang::JSONDumper, clang::JSONNodeDumper>::Visit(clang::Decl const*, bool)::'lambda'(), void clang::NodeStreamer::AddChild<clang::ASTNodeTraverser<clang::JSONDumper, clang::JSONNodeDumper>::Visit(clang::Decl const*, bool)::'lambda'()>(llvm::StringRef, clang::ASTNodeTraverser<clang::JSONDumper, clang::JSONNodeDumper>::Visit(clang::Decl const*, bool)::'lambda'())::'lambda'(bool)&, bool>, clang::ASTNodeTraverser<clang::JSONDumper, clang::JSONNodeDumper>::Visit(clang::Decl const*, bool)::'lambda'()>::type std::__invoke_r<void, void clang::NodeStreamer::AddChild<clang::ASTNodeTraverser<clang::JSONDumper, clang::JSONNodeDumper>::Visit(clang::Decl const*, bool)::'lambda'()>(llvm::StringRef, clang::ASTNodeTraverser<clang::JSONDumper, clang::JSONNodeDumper>::Visit(clang::Decl const*, bool)::'lambda'())::'lambda'(bool)&, bool>(void clang::NodeStreamer::AddChild<clang::ASTNodeTraverser<clang::JSONDumper, clang::JSONNodeDumper>::Visit(clang::Decl const*, bool)::'lambda'()>(llvm::StringRef, clang::ASTNodeTraverser<clang::JSONDumper, clang::JSONNodeDumper>::Visit(clang::Decl const*, bool)::'lambda'())::'lambda'(bool)&, bool&&) /usr/include/c++/15.1.1/bits/invoke.h:113:28
#27 0x00007f54fa6d1bb7 std::_Function_handler<void (bool), void clang::NodeStreamer::AddChild<clang::ASTNodeTraverser<clang::JSONDumper, clang::JSONNodeDumper>::Visit(clang::Decl const*, bool)::'lambda'()>(llvm::StringRef, clang::ASTNodeTraverser<clang::JSONDumper, clang::JSONNodeDumper>::Visit(clang::Decl const*, bool)::'lambda'())::'lambda'(bool)>::_M_invoke(std::_Any_data const&, bool&&) /usr/include/c++/15.1.1/bits/std_function.h:292:30
#28 0x00007f54fa6c9524 std::function<void (bool)>::function<void clang::NodeStreamer::AddChild<clang::ASTNodeTraverser<clang::JSONDumper, clang::JSONNodeDumper>::Visit(clang::Decl const*, bool)::'lambda'()>(llvm::StringRef, clang::ASTNodeTraverser<clang::JSONDumper, clang::JSONNodeDumper>::Visit(clang::Decl const*, bool)::'lambda'())::'lambda'(bool), void>(clang::ASTNodeTraverser<clang::JSONDumper, clang::JSONNodeDumper>::Visit(clang::Decl const*, bool)::'lambda'()&&) /usr/include/c++/15.1.1/bits/std_function.h:439:19
#29 0x00007f54fa6c9524 _ZNSt8functionIFvbEEaSIZN5clang12NodeStreamer8AddChildIZNS3_16ASTNodeTraverserINS3_10JSONDumperENS3_14JSONNodeDumperEE5VisitEPKNS3_4DeclEbEUlvE_EEvN4llvm9StringRefET_EUlbE_EENSt9enable_ifIXsrNS1_9_CallableISG_NSI_IXntsrSt7is_sameINSt9remove_cvINSt16remove_referenceISG_E4typeEE4typeES1_E5valueESt5decayISG_EE4type4typeESt15__invoke_resultIRSW_JbEEEE5valueERS1_E4typeEOSG_ /usr/include/c++/15.1.1/bits/std_function.h:536:4
#30 0x00007f54fa6c9524 void clang::NodeStreamer::AddChild<clang::ASTNodeTraverser<clang::JSONDumper, clang::JSONNodeDumper>::Visit(clang::Decl const*, bool)::'lambda'()>(llvm::StringRef, clang::ASTNodeTraverser<clang::JSONDumper, clang::JSONNodeDumper>::Visit(clang::Decl const*, bool)::'lambda'()) (.constprop.0) /usr/src/debug/clang/clang-20.1.8.src/include/clang/AST/JSONNodeDumper.h:103:22
#31 0x00007f54fa6769f8 clang::ASTNodeTraverser<clang::JSONDumper, clang::JSONNodeDumper>::Visit(clang::Decl const*, bool) (.constprop.0) /usr/src/debug/clang/clang-20.1.8.src/include/clang/AST/ASTNodeTraverser.h:105:31
#32 0x00007f54fa6c991b memcpy /usr/include/bits/string_fortified.h:29:33
#33 0x00007f54fa6c991b llvm::detail::PunnedPointer<clang::Decl*>::asInt() const /usr/include/llvm/ADT/PointerIntPair.h:41:16
#34 0x00007f54fa6c991b llvm::detail::PunnedPointer<clang::Decl*>::operator long() const /usr/include/llvm/ADT/PointerIntPair.h:45:53
#35 0x00007f54fa6c991b llvm::PointerIntPair<clang::Decl*, 3u, clang::Decl::ModuleOwnershipKind, llvm::PointerLikeTypeTraits<clang::Decl*>, llvm::PointerIntPairInfo<clang::Decl*, 3u, llvm::PointerLikeTypeTraits<clang::Decl*>>>::getPointer() const /usr/include/llvm/ADT/PointerIntPair.h:94:57
#36 0x00007f54fa6c991b clang::Decl::getNextDeclInContext() /usr/src/debug/clang/clang-20.1.8.src/include/clang/AST/DeclBase.h:448:72
#37 0x00007f54fa6c991b clang::DeclContext::decl_iterator::operator++() /usr/src/debug/clang/clang-20.1.8.src/include/clang/AST/DeclBase.h:2346:46
#38 0x00007f54fa6c991b clang::ASTNodeTraverser<clang::JSONDumper, clang::JSONNodeDumper>::dumpDeclContext(clang::DeclContext const*) /usr/src/debug/clang/clang-20.1.8.src/include/clang/AST/ASTNodeTraverser.h:340:5
#39 0x00007f54fa6c991b clang::ASTNodeTraverser<clang::JSONDumper, clang::JSONNodeDumper>::Visit(clang::Decl const*, bool)::'lambda'()::operator()() const /usr/src/debug/clang/clang-20.1.8.src/include/clang/AST/ASTNodeTraverser.h:133:26
#40 0x00007f54fa6c991b clang::ASTNodeTraverser<clang::JSONDumper, clang::JSONNodeDumper>::Visit(clang::Decl const*, bool)::'lambda'()::operator()() const /usr/src/debug/clang/clang-20.1.8.src/include/clang/AST/ASTNodeTraverser.h:105:32
#41 0x00007f54fa6c991b void clang::NodeStreamer::AddChild<clang::ASTNodeTraverser<clang::JSONDumper, clang::JSONNodeDumper>::Visit(clang::Decl const*, bool)::'lambda'()>(llvm::StringRef, clang::ASTNodeTraverser<clang::JSONDumper, clang::JSONNodeDumper>::Visit(clang::Decl const*, bool)::'lambda'()) (.constprop.0) /usr/src/debug/clang/clang-20.1.8.src/include/clang/AST/JSONNodeDumper.h:56:17
#42 0x00007f54fa6769f8 clang::ASTNodeTraverser<clang::JSONDumper, clang::JSONNodeDumper>::Visit(clang::Decl const*, bool) (.constprop.0) /usr/src/debug/clang/clang-20.1.8.src/include/clang/AST/ASTNodeTraverser.h:105:31
#43 0x00007f54fa683de6 std::unique_ptr<clang::ASTNameGenerator::Implementation, std::default_delete<clang::ASTNameGenerator::Implementation>>::~unique_ptr() /usr/include/c++/15.1.1/bits/unique_ptr.h:398:12
#44 0x00007f54fa683de6 clang::ASTNameGenerator::~ASTNameGenerator() /usr/src/debug/clang/clang-20.1.8.src/lib/AST/Mangle.cpp:600:40
#45 0x00007f54fa683de6 clang::JSONNodeDumper::~JSONNodeDumper() /usr/src/debug/clang/clang-20.1.8.src/include/clang/AST/JSONNodeDumper.h:116:7
#46 0x00007f54fa683de6 clang::JSONDumper::~JSONDumper() /usr/src/debug/clang/clang-20.1.8.src/include/clang/AST/JSONNodeDumper.h:376:7
#47 0x00007f54fa683de6 clang::Decl::dump(llvm::raw_ostream&, bool, clang::ASTDumpOutputFormat) const /usr/src/debug/clang/clang-20.1.8.src/lib/AST/ASTDumper.cpp:230:3
#48 0x00007f54fc5dd648 print /usr/src/debug/clang/clang-20.1.8.src/lib/Frontend/ASTConsumers.cpp:101:7
#49 0x00007f54fc5dd648 HandleTranslationUnit /usr/src/debug/clang/clang-20.1.8.src/lib/Frontend/ASTConsumers.cpp:48:21
#50 0x00007f54fa507516 __gnu_cxx::__normal_iterator<std::unique_ptr<clang::TemplateInstantiationCallback, std::default_delete<clang::TemplateInstantiationCallback>>*, std::vector<std::unique_ptr<clang::TemplateInstantiationCallback, std::default_delete<clang::TemplateInstantiationCallback>>, std::allocator<std::unique_ptr<clang::TemplateInstantiationCallback, std::default_delete<clang::TemplateInstantiationCallback>>>>>::__normal_iterator(std::unique_ptr<clang::TemplateInstantiationCallback, std::default_delete<clang::TemplateInstantiationCallback>>* const&) /usr/include/c++/15.1.1/bits/stl_iterator.h:1059:9
#51 0x00007f54fa507516 std::vector<std::unique_ptr<clang::TemplateInstantiationCallback, std::default_delete<clang::TemplateInstantiationCallback>>, std::allocator<std::unique_ptr<clang::TemplateInstantiationCallback, std::default_delete<clang::TemplateInstantiationCallback>>>>::begin() /usr/include/c++/15.1.1/bits/stl_vector.h:999:16
#52 0x00007f54fa507516 void clang::finalize<std::vector<std::unique_ptr<clang::TemplateInstantiationCallback, std::default_delete<clang::TemplateInstantiationCallback>>, std::allocator<std::unique_ptr<clang::TemplateInstantiationCallback, std::default_delete<clang::TemplateInstantiationCallback>>>>>(std::vector<std::unique_ptr<clang::TemplateInstantiationCallback, std::default_delete<clang::TemplateInstantiationCallback>>, std::allocator<std::unique_ptr<clang::TemplateInstantiationCallback, std::default_delete<clang::TemplateInstantiationCallback>>>>&, clang::Sema const&) /usr/src/debug/clang/clang-20.1.8.src/include/clang/Sema/TemplateInstCallback.h:54:3
#53 0x00007f54fa507516 clang::ParseAST(clang::Sema&, bool, bool) /usr/src/debug/clang/clang-20.1.8.src/lib/Parse/ParseAST.cpp:191:11
#54 0x00007f54fc69f23c clang::CompilerInstance::shouldBuildGlobalModuleIndex() const /usr/src/debug/clang/clang-20.1.8.src/lib/Frontend/CompilerInstance.cpp:88:58
#55 0x00007f54fc69f23c clang::FrontendAction::Execute() /usr/src/debug/clang/clang-20.1.8.src/lib/Frontend/FrontendAction.cpp:1076:38
#56 0x00007f54fc625c57 llvm::Error::getPtr() const /usr/include/llvm/Support/Error.h:282:12
#57 0x00007f54fc625c57 llvm::Error::operator bool() /usr/include/llvm/Support/Error.h:242:22
#58 0x00007f54fc625c57 clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) /usr/src/debug/clang/clang-20.1.8.src/lib/Frontend/CompilerInstance.cpp:1056:42
#59 0x00007f54fc70742f std::__shared_ptr<clang::FrontendOptions, (__gnu_cxx::_Lock_policy)2>::get() const /usr/include/c++/15.1.1/bits/shared_ptr_base.h:1673:16
#60 0x00007f54fc70742f std::__shared_ptr_access<clang::FrontendOptions, (__gnu_cxx::_Lock_policy)2, false, false>::_M_get() const /usr/include/c++/15.1.1/bits/shared_ptr_base.h:1370:69
#61 0x00007f54fc70742f std::__shared_ptr_access<clang::FrontendOptions, (__gnu_cxx::_Lock_policy)2, false, false>::operator*() const /usr/include/c++/15.1.1/bits/shared_ptr_base.h:1358:40
#62 0x00007f54fc70742f clang::CompilerInvocation::getFrontendOpts() /usr/src/debug/clang/clang-20.1.8.src/include/clang/Frontend/CompilerInvocation.h:259:48
#63 0x00007f54fc70742f clang::CompilerInstance::getFrontendOpts() /usr/src/debug/clang/clang-20.1.8.src/include/clang/Frontend/CompilerInstance.h:313:39
#64 0x00007f54fc70742f clang::ExecuteCompilerInvocation(clang::CompilerInstance*) /usr/src/debug/clang/clang-20.1.8.src/lib/FrontendTool/ExecuteCompilerInvocation.cpp:297:29
#65 0x0000561bf0086a03 cc1_main(llvm::ArrayRef<char const*>, char const*, void*) /usr/src/debug/clang/clang-20.1.8.src/tools/driver/cc1_main.cpp:290:40
#66 0x0000561bf008a781 ExecuteCC1Tool /usr/src/debug/clang/clang-20.1.8.src/tools/driver/driver.cpp:218:20
#67 0x00007f54fc248205 operator() /usr/src/debug/clang/clang-20.1.8.src/lib/Driver/Job.cpp:437:32
#68 0x00007f54fc248205 callback_fn<clang::driver::CC1Command::Execute(llvm::ArrayRef<std::optional<llvm::StringRef> >, std::string*, bool*) const::<lambda()> > /usr/include/llvm/ADT/STLFunctionalExtras.h:46:52
#69 0x00007f54f0dcbf88 llvm::CrashRecoveryContext::RunSafely(llvm::function_ref<void ()>) /usr/src/debug/llvm/llvm-20.1.8.src/lib/Support/CrashRecoveryContext.cpp:428:1
#70 0x00007f54fc252a15 clang::driver::CC1Command::Execute(llvm::ArrayRef<std::optional<llvm::StringRef>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>*, bool*) const /usr/src/debug/clang/clang-20.1.8.src/lib/Driver/Job.cpp:441:10
#71 0x00007f54fc27fcfb clang::driver::Compilation::ExecuteCommand(clang::driver::Command const&, clang::driver::Command const*&, bool) const /usr/src/debug/clang/clang-20.1.8.src/lib/Driver/Compilation.cpp:196:22
#72 0x00007f54fc2800ec clang::driver::Compilation::ExecuteJobs(clang::driver::JobList const&, llvm::SmallVectorImpl<std::pair<int, clang::driver::Command const*>>&, bool) const /usr/src/debug/clang/clang-20.1.8.src/lib/Driver/Compilation.cpp:251:5
#73 0x00007f54fc284895 llvm::SmallVectorBase<unsigned int>::empty() const /usr/include/llvm/ADT/SmallVector.h:81:46
#74 0x00007f54fc284895 clang::driver::Driver::ExecuteCompilation(clang::driver::Compilation&, llvm::SmallVectorImpl<std::pair<int, clang::driver::Command const*>>&) /usr/src/debug/clang/clang-20.1.8.src/lib/Driver/Driver.cpp:2190:28
#75 0x0000561bf008c9e4 llvm::SmallVectorBase<unsigned int>::size() const /usr/include/llvm/ADT/SmallVector.h:78:32
#76 0x0000561bf008c9e4 llvm::SmallVectorTemplateCommon<std::pair<int, clang::driver::Command const*>, void>::end() /usr/include/llvm/ADT/SmallVector.h:269:41
#77 0x0000561bf008c9e4 clang_main(int, char**, llvm::ToolContext const&) /usr/src/debug/clang/clang-20.1.8.src/tools/driver/driver.cpp:404:26
#78 0x0000561bf007d1e0 main /usr/src/debug/clang/clang-20.1.8.src/build/tools/driver/clang-driver.cpp:18:1
#79 0x00007f54efe27675 __libc_start_call_main /usr/src/debug/glibc/glibc/csu/../sysdeps/nptl/libc_start_call_main.h:74:3
#80 0x00007f54efe27729 call_init /usr/src/debug/glibc/glibc/csu/../csu/libc-start.c:128:20
#81 0x00007f54efe27729 __libc_start_main /usr/src/debug/glibc/glibc/csu/../csu/libc-start.c:347:5
#82 0x0000561bf007d245 _start (/usr/bin/clang-20+0xb245)
clang: error: clang frontend command failed with exit code 139 (use -v to see invocation)
clang version 20.1.8
Target: x86_64-pc-linux-gnu
Thread model: posix
InstalledDir: /usr/bin
clang: error: unable to execute command: Segmentation fault (core dumped)
clang: note: diagnostic msg: Error generating preprocessed source(s).

The file /home/haplessidiot/Documents/xserver/hw/xfree86/dri2/dri2.c could not be parsed as a C source file.
C2V command: '/home/haplessidiot/.vmodules/c2v/c2v' 'c' '/home/haplessidiot/Documents/xserver/hw/xfree86/dri2/dri2.c'
C2V failed to translate the C files. Please report it via GitHub.
